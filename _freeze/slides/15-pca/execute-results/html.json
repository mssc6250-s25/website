{
  "hash": "ec326137f2f9b282f9f312c9074cb32b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Dimension Reduction `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 576 512\" style=\"height:1em;width:1.12em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M264.5 5.2c14.9-6.9 32.1-6.9 47 0l218.6 101c8.5 3.9 13.9 12.4 13.9 21.8s-5.4 17.9-13.9 21.8l-218.6 101c-14.9 6.9-32.1 6.9-47 0L45.9 149.8C37.4 145.8 32 137.3 32 128s5.4-17.9 13.9-21.8L264.5 5.2zM476.9 209.6l53.2 24.6c8.5 3.9 13.9 12.4 13.9 21.8s-5.4 17.9-13.9 21.8l-218.6 101c-14.9 6.9-32.1 6.9-47 0L45.9 277.8C37.4 273.8 32 265.3 32 256s5.4-17.9 13.9-21.8l53.2-24.6 152 70.2c23.4 10.8 50.4 10.8 73.8 0l152-70.2zm-152 198.2l152-70.2 53.2 24.6c8.5 3.9 13.9 12.4 13.9 21.8s-5.4 17.9-13.9 21.8l-218.6 101c-14.9 6.9-32.1 6.9-47 0L45.9 405.8C37.4 401.8 32 393.3 32 384s5.4-17.9 13.9-21.8l53.2-24.6 152 70.2c23.4 10.8 50.4 10.8 73.8 0z\"/></svg>`{=html}'\nsubtitle: \"MSSC 6250 Statistical Machine Learning\"\nauthor: \"Dr. Cheng-Han Yu <br> Department of Mathematical and Statistical Sciences <br> Marquette University\"\n# date: \"April 22 2025\"\n# macros: _macros.tex # import a list of TeX/LaTeX definitions\nformat: \n  revealjs:\n    # code-line-numbers: false\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n    # include-in-header:\n    #     - \"macros.tex\"\n    highlight-style: arrow\n    code-block-bg: true\n    self-contained: false\n    slide-number: c/t\n    incremental: false\n    width: 1800\n    height: 1000\n    margin: 0.05\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/e/e8/Marquette_Golden_Eagles_logo.svg\"\n    footer: \"[mssc6250-s25.github.io/website](https://mssc6250-s25.github.io/website/)\"\n    theme: [\"simple\", \"styles.scss\"]\n    echo: false\n    multiplex: true\n    code-link: true\n    fig-cap-location: bottom\n    fig-align: center\n    transition: none ## fade slide convex concave zoom\n    title-slide-attributes:\n      data-background-color: \"#447099\"\n      # data-background-image: images/paper-texture.jpg\n      # data-background-size: cover\n      # data-background-color: \"#698ED5\"\neditor: source\nexecute:\n  freeze: true\n  echo: false\n---\n\n\n# {visibility=\"hidden\"}\n\n\n\\def\\cD{{\\cal D}}\n\\def\\cL{{\\cal L}}\n\\def\\cX{{\\cal X}}\n\\def\\cF{{\\cal F}}\n\\def\\cH{{\\cal H}}\n\\def\\bA{\\mathbf{A}}\n\\def\\bB{\\mathbf{B}}\n\\def\\bX{\\mathbf{X}}\n\\def\\bH{\\mathbf{H}}\n\\def\\bI{\\mathbf{I}}\n\\def\\bU{\\mathbf{U}}\n\\def\\bD{\\mathbf{D}}\n\\def\\bV{\\mathbf{V}}\n\\def\\bS{\\mathbf{S}}\n\\def\\bW{\\mathbf{W}}\n\\def\\bZ{\\mathbf{Z}}\n\\def\\bK{\\mathbf{K}}\n\\def\\bx{\\mathbf{x}}\n\\def\\by{\\mathbf{y}}\n\\def\\bs{\\mathbf{s}}\n\\def\\br{\\mathbf{r}}\n\\def\\bu{\\mathbf{u}}\n\\def\\be{\\mathbf{e}}\n\\def\\bv{\\mathbf{v}}\n\\def\\bp{\\mathbf{p}}\n\\def\\bw{\\mathbf{w}}\n\\def\\bz{\\mathbf{z}}\n\\def\\bzero{\\mathbf{0}}\n\\def\\balpha{\\boldsymbol \\alpha}\n\\def\\bbeta{\\boldsymbol \\beta}\n\\def\\btheta{\\boldsymbol \\theta}\n\\def\\bSigma{\\boldsymbol \\Sigma}\n\\def\\bxi{\\boldsymbol \\xi}\n\\def\\bmu{\\boldsymbol \\mu}\n\\def\\bep{\\boldsymbol \\epsilon}\n\\def\\T{\\text{T}}\n\\def\\Trace{\\text{Trace}}\n\\def\\Cov{\\text{Cov}}\n\\def\\Corr{\\text{Corr}}\n\\def\\Var{\\text{Var}}\n\\def\\E{\\text{E}}\n\\def\\pr{\\text{pr}}\n\\def\\Prob{\\text{P}}\n\\DeclareMathOperator*{\\argmin}{arg\\,min}\n\\DeclareMathOperator*{\\argmax}{arg\\,max}\n\n\n\n\n\n# Unsupervised Learning\n\n## Unsupervised Learning\n\n- *Supervised Learning*: response $Y$ and features $X_1, X_2, \\dots, X_p$ measured on $n$ observations.\n\n- *Unsupervised Learning*: only features $X_1, X_2, \\dots, X_p$ measured on $n$ observations.\n    + Not interested in prediction (no response to be predicted)\n    + Discover any interesting pattern or relationships among these features.\n\n. . .\n\n+ Estimate the [density, covariance, graph (network)]{.green}, etc. of $\\bX$\n\n. . .\n\n+ [**Dimension reduction**]{.green} for effective data visualization or extracting most important information those features contain.\n    - <span style=\"color:blue\">plot a bunch of points of $\\boldsymbol{x} = (x_1, x_2, \\dots, x_p)$ in a 2-D scatter plot (manifold). (reduce dimension from $p$ to 2)</span>\n    - <span style=\"color:blue\"> use 2 variables to explain most variations or represents high data density in the $p$ variables </span>\n  \n. . .\n\n+ [**Clustering**]{.green} discovers unknown subgroups/clusters in data\n    - <span style=\"color:blue\">find 3 sub-groups of people based on variables income, occupation, age, etc</span>\n    \n    \n# Background: Dimensions\n\n## One-Dimension (1D) Number line\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 1\n   English\n     <int>\n 1      41\n 2      65\n 3      55\n 4      94\n 5      66\n 6      85\n 7      44\n 8      44\n 9      67\n10      73\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n:::\n\n::: {.column width=\"70%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n:::\n\n::::\n\n:::notes\n- Let's go back to your first grade. You remember that one-dimension equals a number line.\n- Now suppose we have 50 English grades. The first 3 scores are 41, 65, and 55. \n- We can plot these values on the number line just like we did in the elementary school.\n- 1st student with score 41 it's a dot at 41, 2nd student with score 65, it's a dot at 65, and so on.\n:::\n\n\n\n## One-Dimension (1D) Number line: Uniform students\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 1\n   English\n     <int>\n 1      41\n 2      65\n 3      55\n 4      94\n 5      66\n 6      85\n 7      44\n 8      44\n 9      67\n10      73\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n::: notes\n- If you plot all students scores, we might see something like this: an uniform distribution of English scores.\n:::\n\n\n## 1D Number line: Non-uniform students\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 1\n   English\n     <int>\n 1      77\n 2      78\n 3      81\n 4      78\n 5      52\n 6      62\n 7      47\n 8      58\n 9      43\n10      59\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.column width=\"70%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- Or we might get a non-uniform distribution of English scores. Some students obtain a very high grade, but some students are falling behind and get a very low grade.\n:::\n\n\n\n\n## Two-Dimensions (2D) X-Y Scatter plot: High Correlated\n\nEnglish and Math measure an overall academic performance.\n\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n::: {.cell layout-align=\"center\" highlight.output='4'}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 2\n   English  Math\n     <int> <dbl>\n 1      41  33.2\n 2      65  63.6\n 3      55  44.6\n 4      94  95  \n 5      66  65.6\n 6      85  73.1\n 7      44  46.6\n 8      44  51  \n 9      67  69.4\n10      73  66.5\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.column width=\"70%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-9-1.png){fig-align='center' width=65%}\n:::\n:::\n\n:::\n\n::::\n\n\n\n::: notes\n- Now let's go to sixth grade when we learned about 2 dimensional graphs.\n- Now we have two axes instead of one, and now we can plot data from two different subjects instead of just one.\n- Additional to English scores, here we also have Math scores of some students.\n- And we all know how to map a English and math score pair to a point on a 2D plot.\n- If we put all students English and Math scores on the plot, we might see something like this that English and Math scores are positively correlated, meaning that a student having high English score tends to have high Math score too. \n- This might be due to the fact that English and Math measure an overall academic performance. A good student tends to have both high English and Math scores.\n:::\n\n## Two-Dimensions (2D) X-Y Scatter plot: No correlated\n\nEnglish and Math measure different abilities.\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 2\n   English  Math\n     <int> <int>\n 1      41    27\n 2      65    47\n 3      55    32\n 4      94    44\n 5      66    20\n 6      85    30\n 7      44    16\n 8      44    72\n 9      67    86\n10      73    82\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.column width=\"70%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-11-1.png){fig-align='center' width=65%}\n:::\n:::\n\n:::\n\n::::\n\n::: notes\n- Or we might see English and Math scores are not correlated, meaning that a high English score does not tell us anything about Math score, whether it is high or low.\n- Because English and Math might measure different abilities. \n- English measures verbal and communication skills and Math measures logic and quantitative skills\n:::\n\n\n\n## Three-Dimensions (3D) X-Y-Z Scatter plot\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 3\n   English  Math Biology\n     <int> <dbl>   <dbl>\n 1      41  33.2    39.2\n 2      65  63.6    61.6\n 3      55  44.6    41.6\n 4      94  95      92  \n 5      66  65.6    73.6\n 6      85  73.1    71.1\n 7      44  46.6    56.6\n 8      44  51      56  \n 9      67  69.4    79.4\n10      73  66.5    59.5\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"65%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- OK. Now maybe in college, we started drawing 3D graph, having height, width and depth.\n- With 3 separate axes, we can now plot data from three different subjects.\n- So now we have three subjects, English, Math and Biology.\n- With the same logic as 2D plot, we put English score on X-axis, Math score on Y-axis, and biology score on Z-axis, then draw lines perpendicular to each axis to put the point in the 3D space.\n- And this is our 3D scatter plot.\n- So, if we have one subject data, we can make a 1D graph.\n- If we have two subject data, we can make a 2D graph.\n- If we have three subject data, we can make a 3D graph.\n:::\n\n\n\n\n## Four-Dimension (4D) X-Y-Z-? Scatter plot\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_class600\n# A tibble: 50 × 4\n   English  Math Biology History\n     <int> <dbl>   <dbl>   <dbl>\n 1      41  33.2    39.2      51\n 2      65  63.6    61.6      53\n 3      55  44.6    41.6      63\n 4      94  95      92        83\n 5      66  65.6    73.6      51\n 6      85  73.1    71.1      74\n 7      44  46.6    56.6      34\n 8      44  51      56        33\n 9      67  69.4    79.4      76\n10      73  66.5    59.5      74\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n::: notes\n- But what happens if we have data from 4 academic subjects?? here English, Math, Biology and History.\n- Well we need 4D graph. The problem is You can't draw a 4D plot on paper!\n- What if a student has 20 different grades from 20 different courses?? We need a 20 dimensional graph? \n- But what is that?? There is no way we can draw that.\n:::\n\n\n\n\n## How about Pair Plots?\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: notes\n- Plotting all 2-D scatter plots of all possible pairs might be a solution to check the relationship between variables, or exploratory data analysis.\n- Like here we see basically any two variables or two subject scores are positively correlated.\n:::\n\n\n## Tooooo Many Pair Plots!\n\n- If we have $p$ variables, there are ${p \\choose 2} = p(p-1)/2$ pairs.\n- If $p = 10$, we have 45 such scatter plots to look at!\n- In practice, we may encounter over 100 variables!!\n\n::: notes\n- But still, there is a problem. \n- If you have $p$ variables, you are gonna have ${p \\choose 2} = p(p-1)/2$ pairs.\n- If $p = 10$, you have 45 such scatter plots to look at!\n- Not to mention that in real data science work, you may encounter over 100 variables!!\n:::\n\n\n\n## Dimension Reduction\n\n\n- One variable represents one **dimension**.\n\n- With many variables in the data, we live in a **high dimensional** world.\n\n. . .\n\nGOAL:\n\n- Find a *low-dimensional* (usually 2D) representation of the data that captures [*as much of the information all of those variables provide as possible*]{.green}.\n\n- Use two [*created*]{.green} variables to represent all $p$ variables, and make a scatter plot of the two created variables to learn what our observations look like as if they lived in the high dimensional space.\n<!-- - But why and when can we omit dimensions? -->\n\n. . .\n\n:::{.question}\nWhy and when can we omit dimensions?\n:::\n\n\n\n\n::: notes\n- So in order to meaningfully represent the relationship of all variables, we need a technique, Dimension Reduction.\n- In mathematics, One variable represents one **dimension**, so with many variables in the data, we live in a **high dimensional** world.\n- We would like to find a *low-dimensional* (usually 2D) representation of the data that captures as much of the information all of those variables provide as possible.\n- We use two *created* variables to represent all $p$ variables, and make a scatter plot of the two created variables to learn what our observations look like as if they lived in the high dimensional space.\n- Of course, it's not always a good idea to just use two variables to represent all $p$ variables. Some information will be missing when we just use two variables to represent or explain all the relationships of $p$ variables.\n- But sometimes, a *low-dimensional* representation looks very like a **high dimensional** space, and does not lose much information. In this situation, a *low-dimensional* representation is very useful.\n- So Let's see why and when can we omit dimensions?\n:::\n\n\n\n## Variation mostly from One Variable \n\n\n- Almost all of the variation in the data is from left to right.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-17-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n::: notes\n- Let's suppose we have two variables, and their data look like this. \n- Here we see almost all of the variation in the data from left to right.\n- It means that for variable X, some observations have low values, and some observations have high values.\n- But it looks like all observations have variable Y at about the same level.\n- Since X varies more than Y, having larger variation, X contains more information than Y in the data.\n:::\n\n\n\n\n## Variation mostly from One Variable\n\n- If we flattened the data, the graph would not look much different.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-18-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n::: notes\n- If we flattened the data, removing the up and down variation, our graph would not look much different from what it look like before.\n- Most of the variation, or information is still kept in the data.\n:::\n\n\n\n## Variation mostly from One Variable\n\n- If we flattened the data, we could graph it with a 1D number line!\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-19-1.png){fig-align='center' width=75%}\n:::\n:::\n\n::: notes\n- Now, with up-and-down variation removed, the variable Y becomes redundant, and we can just represent the flattened data using 1D single number line.\n<!-- - If we flattened the data, we could just graph it with a 1D single number line! -->\n:::\n\n\n\n## Variation mostly from One Variable\n\n- Both graphs say *\"the important variation is left to right.\"*\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-20-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n::: notes\n- So in this case, we can display 2D data on a 1D plot without losing too much information!\n- Both graphs say *\"the important variation is left to right.\"*\n- Another example is watching TV. TV is a 2D thing, but we watch TV for 3D shows. The 2D TV represents the 3D shows, programs or drama very well because the 2D representation does not lose much information the 3D shows provide.\n- So through the example, we know some dimensions are more important than others. Like here Variable X is more important than variable Y because variable X explains most of the variation stored in the data.\n:::\n\n\n\n## 3D Drawing on Paper {visibility=\"hidden\"}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](./images/15-pca/drawing.png){fig-align='center' width=100%}\n:::\n:::\n\n::: notes\n- 3D Drawing on Paper is another example of dimension reduction. We can create a 2D representation of some object on a piece of paper, as if the object lived in the 3D space.\n- The reason why this 2D representation is so good is because it captures most of the information contained the 3D object, and we don't need one more dimension to describe that object.\n:::\n\n\n\n# Principal Component Analysis (PCA)\n\n## Idea of PCA\n\n- PCA is a dimension reduction tool that finds a low-dimensional representation of a data set that contains as much as possible of **variation**.\n\n- Each observation lives in a high-dimensional space (lots of variables), but not all of these dimensions (variables) are equally *interesting/important*.\n\n- The concept of *interesting/important* is measured by the amount that the observations vary along each dimension.\n\n::: notes\n- PCA is a dimension reduction tool that finds a low-dimensional representation of a data set that contains as much as possible of *variation* stored in the data set.\n- As we've seen before, each of the observations lives in a high-dimensional space, meaning that each observation has lots of variables associated with it, but not all of these dimensions (variables) are equally *interesting/important*.\n- The concept of *interesting/important* is measured by the amount that the observations vary along each dimension. \n- A characteristic or attribute of observations is called variable because its value varies from sample to sample.\n- If the variable does not vary, it becomes an irrelevant or un-important variable because we cannot use the variable to differentiate or distinguish observations. If everyone in this class gets grade A, then the data science grade is not an important variable to learn which students perform academically better than others.\n:::\n\n## PCA Illustration: 2 Variable Example\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n``` my_classfull\n# A tibble: 50 × 2\n   English  Math\n     <int> <dbl>\n 1      41  33.2\n 2      65  63.6\n 3      55  44.6\n 4      94  95  \n 5      66  65.6\n 6      85  73.1\n 7      44  46.6\n 8      44  51  \n 9      67  69.4\n10      73  66.5\n11      47  58.9\n12      66  66.5\n13      57  51  \n14      57  33.2\n15      77  83.6\n16      83  78.8\n# ℹ 34 more rows\n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.column width=\"70%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-23-1.png){fig-align='center' width=70%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- We use the English and Math score example to illustrate how PCA works.\n- From the data, we have a 2D scatter plot like this.\n- With the data, we can have the average of English score and the average of math score, shown as the red squared point in the scatter plot.\n:::\n\n\n\n\n## Step 1: Shift (or standardize) the Data\n\n- So the two variables have both mean 0. If the variables are measured in a different unit, consider standardization, $\\frac{x_i - \\bar{x}}{s_x}$.\n- Shifting does not change how the data points are positioned *relative* to each other.\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-24-1.png){fig-align='center' width=75%}\n:::\n:::\n\n:::\n\n\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-25-1.png){fig-align='center' width=75%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- PCA first shift or standardize our data so that the center is on top of the origin (0, 0) in the graph. \n- If the two variables are measured in a different scale, standardization is highly recommended. Here because both English and Math scores are measured using the same scale. We only do the shifting, and no scaling.\n- After standardization, all variables will use the same scale to measure their variation, and that makes more sense because PCA wants to find some axis or coordinate lower dimensional representation that contains the most variation, and we don't want the variation depends on variable's measurement units.\n- Notice that Shifting does not change how the data points are positioned *relative* to each other. The scattering shape remains the same.\n:::\n\n\n## Step 2: Find a Line that Fits the Data the Best\n\n- Start with a line *going through the origin*.\n- **Rotate** the line until it fits the data as well as it can, given that it goes through the origin.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-26-1.png){fig-align='center' width=48%}\n:::\n:::\n\n::: notes\n- The second step of PCA is going to fit a line to the centered or normalized data set.\n<!-- - Now that the data are centered on the origin, we can try to fit a line to it. -->\n- To do this, we start by drawing a random line that goes through the origin.\n:::\n\n\n\n## Step 2: Find a Line that Fits the Data the Best\n\n- Start with a line *going through the origin*.\n- **Rotate** the line until it fits the data as well as it can, given that it goes through the origin.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-27-1.png){fig-align='center' width=48%}\n:::\n:::\n\n::: notes\n- Then we rotate the line until if fits the data as well as it can, given that it has to go through the origin.\n:::\n\n\n\n\n## Step 2: Find a Line that Fits the Data the Best\n\n- Start with a line *going through the origin*.\n- **Rotate** the line until it fits the data as well as it can, given that it goes through the origin.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-28-1.png){fig-align='center' width=41%}\n:::\n:::\n\n::: notes\n- Ultimately, this line fits best. \n<!-- - Last time we stopped here, we haven't learned what criterion makes the line the best fit. -->\n- So let's see what makes this line the best fit, and the meaning of this line.\n<!-- - But here, I jump to the conclusion too quickly. First we need to talk about how PCA decides if a fit is good or not. -->\n:::\n\n\n\n## The Meaning of the Best line\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n<!-- - The line [*maximizes the variation of the projected points*]{.green}! -->\n\n- **Principal Component 1 (PC1)**: [*maximizes the variance of the projected points*]{.green}.\n\n\n- PC1 is the line in the Eng-Math space that is *closest* to the $n$ observations\n  + PC1 *minimizes the sum of squared distances between the data points and the PC1.*\n\n\n- **<span style=\"color:red\">PC1 is the best 1D representation of the 2D data</span>**\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-29-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- To quantify how good this line fits the data, PCA projects the data onto it.\n- Then the idea is that we can either measure the distances from the data to the line and try to find the line that minimizes those distances.\n- Or we can try to find the line that maximizes the distances from the projected points to the origin.\n- The two criteria are equivalent.\n- DEMO\n- So we are find the line that **maximizes the variation of the projected points from the data points onto the line**!\n- The best line is called **Principal Component 1 (PC1)**, which **maximizes the sum of squared distances between projected points and the origin.**\n- Regression line: minimizes the sum of squared residuals (vertical lines from the data points to the line)\n- **Principal Component 1 (PC1)**: maximizes the sum of squared distances between between projected points and the origin.\n- PC1 is the line in the Eng-Math 2 dimensional space that is **closest** to the $n$ observations, i.e., PC1 minimizes the sum of squared distances between the data points and the PC1. \n- **<span style=\"color:red\">PC1 is the best 1D representation of the 2D data</span>**\n:::\n\n\n\n\n## The Meaning of the Best line\n\n:::{.xsmall}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Source: https://stats.stackexchange.com/questions/2691/making-sense-of-principal-component-analysis-eigenvectors-eigenvalues](./images/15-pca/pca.gif){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::: notes\n- I am going to conclude the idea of PCA using this gif.\n- This gif shows you the idea of finding principal components.\n- As the line rotates, you can see the locations of the projected points on the line keeps changing as well.\n- And the PC1 is the line that maximizes the variation of the projected points.\n- Also, the PC1 is the line that minimizes the distance between the data points and the line. In the figure, the sum of those red lines will be the smallest.\n- Questions?\n:::\n\n\n\n## PC1 and PC2\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n- The data points are also spread out a little above and below the PC1.\n- There are some variation that is not explained by the PC1.\n- Find the second PC, PC2, that \n  + explains the remaining variation\n  + is the line *through the origin and perpendicular to PC1*.\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-31-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- Along with the PC1, the data points are also spread out a little above and below the PC1.\n- There are some variation of the two variables that is not explained by the PC1.\n- To find another PC that explains the remaining variation, we find the second PC, called PC2 that is the line **through the origin and perpendicular to PC1**.\n:::\n \n\n\n## Linear Combinations\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-32-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n- PC1 = 0.68 $\\times$ English $+$ 0.74 $\\times$ Math\n- PC2 = 0.74 $\\times$ English $-$ 0.68 $\\times$ Math\n- PC1 is like an **overall intelligence index**  as it is a *weighted* average combining verbal and quantitative abilities.\n- PC2 accounts for individual difference in English and Math scores.\n- $0.68^2 + 0.74^2 = 1$ (Pythagorean theorem)\n- The combination weights 0.68, 0.74, etc are called PC **loadings**.\n\n:::\n\n::::\n\n::: notes\n- Now let's look at PC1 and PC2 a little more carefully. \n- First PC1 and PC2 are just a vector in 2 dimensional space, right?\n- In other words, they are linear combinations of two standard basis, here our English axis and Math axis. \n- PCA help us get the linear combinations.\n- Here PC1 = 0.68 $\\times$ English + 0.74 $\\times$ Math\n- PC2 = 0.74 $\\times$ English - 0.68 $\\times$ Math\n- So to make PC1, we mix 0.68 part of English score with 0.74 parts of Math score. \n- One unit of PC1 consists of 0.68 parts of English and 0.74 parts of Math.\n- And because the weight of math score is a little bit larger, Math score is a little bit more important when it comes to describing how the data are spread out. \n- PC1 can be viewed as an **overall intelligence index** because it is an weighted average combining both verbal and quantitative reasoning abilities.\n- PC2 accounts for individual difference in English and Math scores.\n- $0.68^2 + 0.74^2 = 1$ (Pythagorean theorem)\n- The combination weights 0.68, 0.74, etc are called **loadings** of PC.\n<!-- - (0.68, 0.74): e-vector of PC1. -->\n<!-- - One unit of PC1 consists of 0.68 parts of English and 0.74 parts of Math.  -->\n<!-- - One unit of PC2 consists of 0.74 parts of English and -0.68 parts of Math. -->\n:::\n\n\n\n\n## Rotate Everything so that PC1 is Horizontal\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n**1D representation**\n\n- PC1 is our 1D number line that explains the most variation contained in 2D data using a 1D line.\n- Points on the PC1 are the projected points of data onto PC1.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-33-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n**2D representation**\n\n- The new coordinates PC1 and PC2 are ordered by variation size of the English and Math scores\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-34-1.png){fig-align='center' width=78%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- If we make PC1 and PC2 the new X-Y coordinates, the new coordinates PC1 and PC2 are ordered by variation size of the English and Math scores.\n- PC1 is our 1D number line that explains the most variation contained in 2D data using a 1D line.\n- Points on the PC1 are the projected points of data onto PC1.\n- PC1 explains the most variation, and PC2 explains the second most variation.\n- And PC2 explains the remaining variations that are not explained by PC1.\n- Here, because we only have 2 dimensions, we have at most 2 PCs. \n:::\n\n\n\n\n## Variation\n\n<!-- - Variance for PC1 $= \\frac{\\text{Sum of squared distances of projected points on PC1}}{n-1}$  -->\n\n<!-- - Variance for PC2 $= \\frac{\\text{Sum of squared distances of projected points on PC2}}{n-1}$  -->\n\n- If the variation for PC1 is $17$ and the variation for PC2 is $2$, the total variation presented in the data is $17+2=19$.\n\n- PC1 accounts for $17/19 = 89\\%$ of the total variation, and PC2 accounts for $2/19 = 11\\%$ of the total variation.\n\n\n::: notes\n- OK how do we quantify variation. Let's give it a definition.\n- Variation for PC1 $= \\frac{\\text{Sum of squared distances of projected points on PC1}}{n-1}$ \n- Variation for PC2 $= \\frac{\\text{Sum of squared distances of projected points on PC2}}{n-1}$ \n- If the variation for PC1 is $17$ and the variation for PC2 is $2$, the total variation presented in the data is $17+2=19$.\n- PC1 accounts for $17/19 = 89\\%$ of the total variation, and PC2 accounts for $2/19 = 11\\%$ of the total variation.\n:::\n\n\n## How about 3 or More Variables?\n\n- PC1 spans the direction of the most variation\n\n. . .\n\n- PC2 spans the direction of the 2nd most variation\n\n. . .\n\n- PC3 spans the direction of the 3rd most variation\n\n. . .\n\n- PC4 spans the direction of the 4th most variation\n\n. . .\n\n- If we have $n$ observations and $p$ variables (dimensions), there are at most $\\min(n - 1, p)$ PCs.\n\n\n::: notes\n- OK. We use a 2D data to illustrate PCA. How about 3 or More Variables? \n- Well the idea of 2D data can be exactly applied to 3 or more dimensional data.\n:::\n\n\n\n\n## US Arrest Data in 1973\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\ndim(USArrests)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50  4\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\" highlight.output='1'}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nhead(USArrests, 16)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` my_classfull\n            Murder Assault UrbanPop Rape\nAlabama       13.2     236       58   21\nAlaska        10.0     263       48   44\nArizona        8.1     294       80   31\nArkansas       8.8     190       50   20\nCalifornia     9.0     276       91   41\nColorado       7.9     204       78   39\nConnecticut    3.3     110       77   11\nDelaware       5.9     238       72   16\nFlorida       15.4     335       80   32\nGeorgia       17.4     211       60   26\nHawaii         5.3      46       83   20\nIdaho          2.6     120       54   14\nIllinois      10.4     249       83   24\nIndiana        7.2     113       65   21\nIowa           2.2      56       57   11\nKansas         6.0     115       66   18\n```\n\n\n:::\n:::\n\n\n::: notes\n- OK. Time to learn how to perform PCA in R.\n- The data set used for PCA is USArrests data set in 1973.\n- Each observation or subject is a state, and we have 4 features or dimensions, Murder, Assault, UrbanPop, and Rape.\n:::\n\n\n\n\n## PC Loading Vectors on `USArrests`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\npca_output <- prcomp(USArrests, scale = TRUE)\n\n## rotation matrix provides PC loadings\n(pca_output$rotation <- -pca_output$rotation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          PC1   PC2   PC3    PC4\nMurder   0.54  0.42 -0.34 -0.649\nAssault  0.58  0.19 -0.27  0.743\nUrbanPop 0.28 -0.87 -0.38 -0.134\nRape     0.54 -0.17  0.82 -0.089\n```\n\n\n:::\n:::\n\n. . .\n\n- PCs are unique up to a sign change, so `-pca_output$rotation` gives us the same PCs as `pca_output$rotation` does. The sign just change the direction, not the angle.\n\n\n$\\text{PC1} = 0.54 \\times \\text{Murder} + 0.58 \\times \\text{Assault} + 0.28 \\times \\text{UrbanPop} + 0.54 \\times \\text{Rape}$\n\n<br>\n\n$\\text{PC2} = 0.42 \\times \\text{Murder} + 0.19 \\times \\text{Assault} - 0.87 \\times \\text{UrbanPop} - 0.17 \\times \\text{Rape}$\n\n. . .\n\n\n- We have 4 PCs because $\\min(n-1, p) = \\min(50-1, 4) = 4$.\n\n\n\n\n\n\n::: notes\n- To perform PCA in R, it cannot be easier. \n- We just need to use the function prcomp(), and put the data set in the function. Then we get everything we want.\n- Here I choose to scale the data because variables are not measured in the same scale. For example, Murder rate and UrbanPop are measured in different units. \n- This makes sure that every variable has variance 1, and our analysis is not affected by units.\n- The PCA results are stored as a list in pca_output object.\n- OK first we can look at the rotation matrix because it provides PC loadings, and so we know what PC1 and PC2 are.\n- Changing signs for easier interpretation of PCs\n- Those PC loadings define how we rotates the coordinates to obtain the PCs.\n???\n- Again, PC1 is just a linear combination or weighted average of the 4 variables, same as PC2.\n???\n- Again, PC1 is just a linear combination or weighted average of the 4 variables, same as PC2.\n- PCs are unique up to a sign change, so `-pca_output$rotation` gives us the same PCs as `pca_output$rotation` does.\n- We have 4 PCs because $\\min(n-1, k) = \\min(50-1, 4) = 4$.\n:::\n\n\n\n\n## PC Scores\n\n- The value of the *rotated* data, the data values of each PC are stored in `pca_output$x`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nhead(pca_output$x <- -pca_output$x, 16) |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` my_classfull\n              PC1   PC2   PC3   PC4\nAlabama      0.98  1.12 -0.44 -0.15\nAlaska       1.93  1.06  2.02  0.43\nArizona      1.75 -0.74  0.05  0.83\nArkansas    -0.14  1.11  0.11  0.18\nCalifornia   2.50 -1.53  0.59  0.34\nColorado     1.50 -0.98  1.08  0.00\nConnecticut -1.34 -1.08 -0.64  0.12\nDelaware     0.05 -0.32 -0.71  0.87\nFlorida      2.98  0.04 -0.57  0.10\nGeorgia      1.62  1.27 -0.34 -1.07\nHawaii      -0.90 -1.55  0.05 -0.89\nIdaho       -1.62  0.21  0.26  0.49\nIllinois     1.37 -0.67 -0.67  0.12\nIndiana     -0.50 -0.15  0.23 -0.42\nIowa        -2.23 -0.10  0.16 -0.02\nKansas      -0.79 -0.27  0.03 -0.20\n```\n\n\n:::\n:::\n\n\n::: notes\n- The value of the *rotated* data, the data values of each PC are stored in `pca_output$x`.\n- In other words, PC1 column here shows the projected values of observations onto PC1. PC2 column shows the projected values of observations onto PC2, and so on.\n:::\n\n\n\n\n## Interpretation of PCs\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\npca_output$rotation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          PC1   PC2   PC3    PC4\nMurder   0.54  0.42 -0.34 -0.649\nAssault  0.58  0.19 -0.27  0.743\nUrbanPop 0.28 -0.87 -0.38 -0.134\nRape     0.54 -0.17  0.82 -0.089\n```\n\n\n:::\n:::\n\n- PCs are less interpretable than original features. \n- The first loading vector places approximately equal weight on `Assualt`, `Murder` and `Rape`, with much less weights on `UrbanPop`.\n- PC1 roughly corresponds to a **overall serious crime rate**.\n\n. . .\n\n- The second loading vector places most of its weight on `UrbanPop`, and much less weight on the other 3 features.\n- PC2 roughly corresponds to the **level of urbanization**.\n\n\n::: notes\n- Intepretability decreases with the order of PCs.\n- So it's easier to give PC1 a meaningful name than PC2, and PC2 is more meaningful than PC3, and so on. Because the PCs after the first 2 PCs usually explain quite small variation in the data, and some of them may be just noises.\n- Let's see if we can interpret these PCs.\n- First keep in mind that PCs are less interpretable than original features. Sometimes we even don't know how to interpret it, especially for PCs that explain small variations. So this is the price we pay for dimension reduction.\n- But let's look at this example.\n- The first loading vector places approximately equal weight on `Assualt`, `Murder` and `Rape`, with much less weights on `UrbanPop`.\n- So PC1 roughly corresponds to a **overall serious crime rate** because PC1 explains the variations of data caused by those crime variables `Assualt`, `Murder` and `Rape`.\n- On the contrary, the second loading vector places most of its weight on `UrbanPop`, and much less weight on the other 3 features.\n- So we can say PC2 roughly corresponds to the **level of urbanization**.\n- So you get the idea, `Assualt`, `Murder` and `Rape` are similar each other because they all are measures of crime rate.\n- So when reducing dimensions, we sort of combine the three similar variables together to become a one single index that measures an overall crime rate.\n- Urban population measures a totally different thing. So the variation created by this variable cannot be explained well by the crime rate, and it should be absorbed in PC2.\n:::\n\n\n\n## 2D Representation of the 4D data\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n            PC1   PC2   PC3   PC4\nWisconsin -2.06 -0.61 -0.14 -0.18\nWyoming   -0.62  0.32 -0.24  0.16\n```\n\n\n:::\n:::\n<!-- # ```{r, eval=F} -->\n<!-- # #| echo: true -->\n<!-- # plot(x = pca_output$x[, 1],  -->\n<!-- #      y = pca_output$x[, 2], cex = 0,  -->\n<!-- #      xlim = c(-3, 3), ylim = c(-3, 3),  -->\n<!-- #      xlab = \"PC1 (crime index)\",  -->\n<!-- #      ylab = \"PC2 (urbanization index)\") -->\n<!-- # text(x = pca_output$x[, 1],  -->\n<!-- #      y = pca_output$x[, 2],  -->\n<!-- #      labels = state.abb) -->\n<!-- # ``` -->\n<!-- # ```{r} -->\n<!-- # #| echo: true -->\n<!-- # wi_pc <- pca_output$x[row.names(pca_output$x)  -->\n<!-- #                       == \"Wisconsin\", ] -->\n<!-- # round(wi_pc, 3) -->\n<!-- # ``` -->\n\n- Higher value of PC1 means higher crime rates (roughly).\n\n- Higher value of PC2 means higher level of urbanization (roughly).\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-41-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- And we can show our 2D Representation of the 4D data. \n- Higher value of PC1 means higher crime rates (roughly).\n- Higher value of PC2 means higher level of urbanization (roughly).\n- We may be able to further analysis on the reduced dimension data, for example, we may want to partition the data into 2 clusters.\n- One cluster has high crime rate and low urbanization, the other group shows low crime rate and high urbanization.\n- One cluster may be the low economically-developed states, and the other high economically-developed states.\n- So you see, we can tell lots of stories by analyzing our data.\n:::\n\n\n\n\n## 2D Representation of the 4D data: biplot\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nbiplot(pca_output, xlabs = state.abb, \n       scale = 0)\n```\n:::\n\n- Top axis: PC1 loadings\n- Right axis: PC2 loadings\n- Red arrows: PC1 and PC2 loading vector, e.g., (0.28, -0.87) for `UrbanPop`.\n- Crime-related variables (`Assualt`, `Murder` and `Rape`) are located close to each other.\n- `UrbanPop` is far from the other three.\n- `Assualt`, `Murder` and `Rape` are more correlated, and `UrbanPop` is less correlated with the other three.\n\n:::\n\n\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/biplot-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n::: notes\n- We can simply use the function biplot() to show the 2D Representation of the data. \n- This function also provide loading vector of PC1 and PC2 that gives us an idea of which direction means a large value of a variable/feature.\n- This is why it is called biplot because we plot two things in one single plot.\n- Here, Top axis is for PC1 loadings\n- Right axis is PC2 loadings\n- Red arrows: PC1 and PC2 loading vector, e.g., (0.28, 0.87) for `UrbanPop`.\n- So NJ and Ca have pretty high urban pop rate because they are large in the `UrbanPop` arrow direction. \n- Crime-related variables (`Assualt`, `Murder` and `Rape`) are located close to each other.\n- `UrbanPop` is far from the other three.\n- `Assualt`, `Murder` and `Rape` are more correlated, and `UrbanPop` is less correlated with the other three.\n- `Assualt`, `Murder` and `Rape` sort of point to the same direction as PC1 and `UrbanPop` points to the same direction as PC2.\n:::\n\n\n\n\n## Proportion of Variance Explained\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n(pc_var <- pca_output$sdev ^ 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.48 0.99 0.36 0.17\n```\n\n\n:::\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n(pc_var_prop <- pc_var / sum(pc_var))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.620 0.247 0.089 0.043\n```\n\n\n:::\n:::\n\n- PC1 explains $62\\%$ of the variations in the data, and PC2 explains $24.7\\%$ of the variance.\n- PC1 and PC2 explain about $87\\%$ of the variance, and the last two PCs explain only $13\\%$.\n- 2D plot provides pretty accurate summary of the data.\n\n\n::: notes\n- Finally I want to talk a little bit about Proportion of Variance Explained.\n- In the pca_output, we have SD of each PC.\n- We square it to get variance.\n- Then if we divided by the sum of variance, we get the Proportion of Variance Explained by each PC.\n- So PC1 explains $62\\%$ of the variations in the data, and PC2 explains $24.7\\%$ of the variance.\n- PC1 and PC2 explain about $87\\%$ of the variance, and the last two PCs explain only $13\\%$.\n- 2D plot provides pretty accurate summary of the data.\n:::\n\n\n\n## Scree Plot\n\nLook for a point at which the proportion of variance explained by each subsequent PC drops off.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/screeplot-1.png){fig-align='center' width=48%}\n:::\n:::\n\n\n\n# Mathematics of PCA\n\n\n## Principal Components\n\n- The $k$th PC is\n\n$$Z_k = \\phi_{1k}X_1 + \\phi_{2k}X_2 + \\dots + \\phi_{pk}X_p,$$\nwhere $\\sum_{j=1}^p\\phi_{jk}^2=1$.\n\n- $(\\phi_{1k}, \\phi_{2k}, \\dots, \\phi_{pk})'$ is the PC **loading vector**.\n\n- The PC1 loading vector solves\n\n\n\n$$\\max_{\\phi_{11}, \\phi_{21}, \\dots, \\phi_{p1}} \\left\\{ \\frac{1}{n}\\sum_{i=1}^n z_{i1}^2\\right\\} = \\left\\{ \\frac{1}{n}\\sum_{i=1}^n \\left( \\sum_{j=1}^p  \\phi_{j1} x_{ij}\\right)^2\\right\\} \\quad \\text{s.t.} \\quad \\sum_{j=1}^p\\phi_{j1}^2 = 1$$\n\n\n<!-- $$\\max_{\\phi_{11}, \\phi_{21}, \\dots, \\phi_{p1}} \\left\\{ \\frac{1}{n}\\sum_{i=1}^n \\left( \\sum_{j=1}^p  \\phi_{j1} x_{ij}\\right)^2\\right\\} \\quad \\text{s.t.} \\quad \\sum_{j=1}^p\\phi_{j1}^2 = 1$$ -->\n\n- Maximize the sample variance of the projected points, or the **scores** $z_{11}, z_{21}, \\dots, z_{n1}$.\n\n- The PC **loading vector** defines a direction in feature space along which the data vary the most.\n\n\n\n## Principal Components\n\nFor $k$th PC, $k > 1$,\n\n::: midi\n\n$$\\max_{\\phi_{1k}, \\phi_{2k}, \\dots, \\phi_{pk}} \\left\\{ \\frac{1}{n}\\sum_{i=1}^n z_{ik}^2\\right\\} = \\left\\{ \\frac{1}{n}\\sum_{i=1}^n \\left( \\sum_{j=1}^p  \\phi_{jk} x_{ij}\\right)^2\\right\\} \\quad \\text{s.t.} \\quad \\sum_{j=1}^p\\phi_{jk}^2 = 1, \\text{ and } {\\bz_m}'\\bz_k = 0, \\, m = 1, \\dots, k-1$$ \n\n:::\n\nwhere \n\n$\\bz_l = (z_{1l}, z_{2l}, \\dots, z_{nl})'$\n\n<!-- $$\\max_{\\phi_{1k}, \\phi_{2k}, \\dots, \\phi_{pk}} \\left\\{ \\frac{1}{n}\\sum_{i=1}^n \\left( \\sum_{j=1}^p  \\phi_{jk} x_{ij}\\right)^2\\right\\} \\quad \\text{s.t.} \\quad \\sum_{j=1}^p\\phi_{jk}^2 = 1, \\text{ and } {\\bz_m}'\\bz_k = 0, \\, m = 1, \\dots, k-1$$ -->\n\n\n\n\n## Low-Rank Approximation\n\n\n- PCs provide low-dimensional planes that are *closest* to the observations.\n\n- $x_{ij} \\approx \\sum_{m=1}^M z_{im}\\phi_{jm}$ with equality when $M = \\min(n-1, p)$\n\n::: small\n\n$$(z_{im}, \\phi_{jm}) = \\argmin_{a_{im}, b_{jm}} \\left\\{ \\sum_{j=1}^p\\sum_{i=1}^n\\left( x_{ij} - \\sum_{m=1}^Ma_{im}b_{jm}\\right)^2\\right\\}$$\n:::\n\n\n\n::: xsmall\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Source: ISL Fig 12.2](./images/15-pca/12-2.png){fig-align='center' width=60%}\n:::\n:::\n\n:::\n\n\n\n\n## Scaling the Variables\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\napply(USArrests, 2, var)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Murder  Assault UrbanPop     Rape \n      19     6945      210       88 \n```\n\n\n:::\n:::\n\n- If we perform PCA on the unscaled variables, PC1 loading vector will have a large loading for `Assault`.\n\n- When all the variables are of the same type, no need to scale the variables.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-49-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-50-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n\n## PCA and SVD\n\nPCA is equivalent to singular value decomposition (SVD) of $\\bX$\n\n$$\\bX_{n\\times p} = \\bU_{n \\times n} \\bD_{n \\times p} \\bV'_{p \\times p}$$ where $\\bU$ and $\\bV$ are orthogonal matrices, and $\\bD$ is diagonal with diagonal elements singular values $d_1 \\ge d_2 \\ge \\cdots \\ge d_p$.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](./images/15-pca/svd.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n## PC Scores and SVD\n\n- ${\\bf Z}_{n \\times p} = [{\\bf z}_1 \\, {\\bf z}_2 \\, \\cdots \\, {\\bf z}_p] = \\bX \\bV$\n\n- The $j$th PC is the $j$th column of ${\\bf Z}$ given by ${\\bf z}_j = (z_{1j}, z_{2j}, \\dots, z_{nj})' = {\\bf Xv}_j$.\n\n- Project $\\bX$ onto the space spanned by $\\bv_j$s\n\n- $\\bv_j$s are *loading vectors*.\n\n. . .\n\n- ${\\bf Z}_{n \\times p} = \\bU\\bD$\n\n- ${\\bf z}_j = d_j\\bu_j$. \n\n- $\\bu_j$s are the unit PC vectors, and $d_j$ controls the variation along the $\\bu_j$ direction.\n\n\n\n## Low-Rank Approximation and SVD\n\n${\\bX} = {\\bU}{\\bD}{\\bV}'$\n\n$\\bA = \\bU_{n\\times M}\\bD_{M \\times M}$ and $\\bB' = \\bV_{M\\times p}'$ are the minimizer of \n\n$$ \\min_{\\bA\\in \\mathbf{R}^{n \\times M}, \\bB\\in \\mathbf{R}^{p \\times M}} \\|\\bX - \\bA\\bB' \\|$$\nwhere \n\n- $\\bU_{n\\times M}$ is $\\bU$ with the first $M$ columns\n- $\\bD_{M \\times M}$ is $\\bD$ of the first $M$ rows and columns\n- $\\bV_{M\\times p}'$ is $\\bV'$ with the first $M$ rows\n\n. . .\n\n- $x_{ij} = \\sum_{m = 1}^p d_mu_{im}v_{jm}$\n\n- $x_{ij} \\approx \\sum_{m = 1}^M d_mu_{im}v_{jm}$\n\n\n\n## PCA and Eigendecomposition\n\nPCA is equivalent to eigendecomposition of $\\bX'\\bX$ or $\\bSigma = \\Cov(\\bX) = \\dfrac{\\bX'\\bX}{n-1}$^[Unit normal scaling (normalization or standardization) is such that the variance is one, and unit length scaling makes the length one. If $\\bW$ is the unit length scaled version, $\\Corr(\\bW) = \\bW'\\bW = \\frac{\\bX'\\bX}{n-1}$], the covariance matrix of $\\bX$.\n\n<!-- $$\\bSigma = \\Cov(\\bX) = \\dfrac{\\bX'\\bX}{n-1} = \\bV\\frac{\\bD^2}{n-1}\\bV'$$ -->\n\n$$\\bX'\\bX = \\bV\\bD^2\\bV' = d_1^2\\bv_1\\bv_1' + \\dots + d_p^2\\bv_p\\bv_p'$$\n\n- Total variation: $\\sum_{j=1}^p \\Var(\\bx_j) = \\frac{1}{n-1}\\sum_{j=1}^pd_j^2 = p$\n\n- Variation of $m$th PC: $\\Var(\\bz_m) = \\frac{d_m^2}{n-1}$\n\n\n\n\n\n## Transformed OLS Regression\n\nTransform ${\\bf y = X\\bbeta + \\bep}$ into \n$${\\bf y = XVV'\\bbeta + \\bep = Z\\balpha} + \\bep$$ where $\\bZ = \\bX\\bV$ and $\\balpha = \\bV'\\bbeta$, or $\\bbeta = \\bV\\balpha$.\n\n\n- The least- squares estimator $\\hat{\\balpha} = (\\bZ'\\bZ)^{-1}\\bZ'\\by = \\bD^{-2}\\bZ'\\by$\n\n\n- $\\Var\\left(\\hat{\\balpha} \\right) = \\sigma^2 (\\bZ'\\bZ)^{-1} = \\sigma^2 \\bD^{-2}$\n\n\n- A small $d_j$ means that the variance of $\\alpha_j$ will be large.\n\n- The PC regression combats multicollinearity by using *less PCs* $(m \\ll p)$ in the model.\n  + The PCs corresponding to tiny $d_j$s (huge variance) are removed and least-squares is applied to the remaining PCs. \n\n\n::: notes\n- Even though the new variables are orthogonal, the same magnitude of variance due to the ill-conditioning in $X'X$ is retained. The total variance has merely been redistributed.\n- ${\\bf y = X\\bbeta + \\bep}$ \n- ${\\bf y = XVV'\\bbeta + \\bep = Z\\balpha} + \\bep$ where ${\\bf Z  =XV}$ and ${\\bf \\balpha = V'\\bbeta}$.\n- The least- squares estimator $\\hat{\\balpha} = {\\bf (Z'Z)^{-1}Z'y = \\Lambda^{-1}Z'y}$\n- $\\var\\left(\\hat{\\balpha} \\right) = \\sigma^2 {\\bf (Z'Z)}^{-1} = \\sigma^2 {\\bf \\Lambda}^{-1}$\n- A small $\\lambda_j$ means that the variance of $\\alpha_j$ will be large.\n- The PC regression combats multicollinearity by using less PCs in the model.\n- Assume that the regressors are arranged in order of decreasing eigenvalues, $\\lambda_1 \\ge \\lambda_2 \\ge \\cdots \\ge \\lambda_k > 0$.\n- The PCs corresponding to near-zero eigenvalues are removed and least squares applied to the remaining PCs. \n- If all PCs are in the model, it is just a rotation of the regressors. The same magnitude of variance is retained.\n- The small variation in the $z_2$ direction is responsible for the large variance in $\\hat{\\alpha}_2$.\n- A large $\\lambda_1$ allows variance of $\\hat{\\alpha}_1$ to be relatively unaffected by the dependency of $x_1$ and $x_2$.\n:::\n\n\n\n## Principal Component Regression (PCR)\n\n- Keep $m < p$ PCs with the largest $m$ singular values $d_1, d_2, \\dots, d_m$.\n- The least- squares estimator is $$\\hat{\\balpha}_m = ({\\bf Z} _m ' {\\bf Z} _m) ^ {-1} {\\bf Z}_m ' {\\bf y} = \\bD_m ^ {-2} {\\bf Z}_m '{\\bf y}$$ where ${\\bf Z}_m = [{\\bf z}_1 \\, {\\bf z}_2 \\, \\cdots \\, {\\bf z}_m]$ and ${\\bf \\bD}_m = \\text{diag}(d_1, d_2, \\dots, d_m)$\n\n. . .\n\n\n- ${\\bf b}_{pc} = {\\bf V}_m\\hat{\\balpha}_m = [{\\bf v}_1 \\, {\\bf v}_2 \\, \\cdots \\, {\\bf v}_m] \\begin{bmatrix} \\hat{\\alpha}_1 \\\\ \\hat{\\alpha}_2 \\\\ \\vdots \\\\ \\hat{\\alpha}_m \\end{bmatrix}$\n- ${\\bf b}_{pc}$ is biased but has smaller variance than ${\\bf b}$.\n\n\n::: notes\n- Keep the first $m < k$ PCs.\n- The least- squares estimator is $$\\hat{\\balpha}_m = ({\\bf Z} _m ' {\\bf Z} _m) ^ {-1} {\\bf Z}_m ' {\\bf y} = {\\bf \\Lambda} _m ^ {-1} {\\bf Z}_m '{\\bf y}$$ where ${\\bf Z}_m = [{\\bf z}_1 \\, {\\bf z}_2 \\, \\cdots \\, {\\bf z}_m]$ and ${\\bf \\Lambda}_m = \\text{diag}(\\lambda_1, \\lambda_2, \\dots, \\lambda_m)$\n- To transform back to the original coefficients, since ${\\bf \\balpha = V'\\bbeta}$, ${\\bf \\bbeta = V\\balpha}$\n- ${\\bf b}_{pc} = {\\bf V}_m\\hat{\\balpha}_m = [{\\bf v}_1 \\, {\\bf v}_2 \\, \\cdots \\, {\\bf v}_m] \\begin{bmatrix} \\hat{\\alpha}_1 \\\\ \\hat{\\alpha}_2 \\\\ \\vdots \\\\ \\hat{\\alpha}_m \\end{bmatrix}$\n- ${\\bf b}_{pc}$ is biased but has smaller variance than ${\\bf b}$.\nDeleting PCs does not imply deletion of any of original regressors. The selected $m$ PCs do contain information provided by all $k$ original regressors.\n:::\n\n\n## Principal Component Regression\n\n::: {.alert}\n- PCR performs well when the directions in which *$X_1, \\dots ,X_p$ show the most variation (the first few PCs) are the directions that are associated with $Y$.*\n:::\n\n. . .\n\n::: {.alert}\n- Deleting PCs does not imply deletion of any of original regressors. The selected $m$ PCs contain information provided by all $k$ original regressors. (*Not a feature selection method*)\n:::\n\n. . .\n\n::: {.alert}\n- PCR and ridge regression are closely related. Ridge regression is a *continuous* version of PCR.\n:::\n\n\n\n## `pls::pcr()`\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nlibrary(pls)\nset.seed(1)\npcr.fit <- pcr(Salary ~ ., data = Hitters, \n               subset = train,\n               scale = TRUE, validation = \"CV\")\nvalidationplot(pcr.fit, val.type = \"MSEP\")\n```\n\n::: {.cell-output-display}\n![](images/15-pca/unnamed-chunk-53-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: notes\nhttps://stats.stackexchange.com/questions/371054/what-is-adjusted-cv-or-bias-corrected-cv\n:::\n\n\n\n## `pls::pcr()`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\npcr.pred <- predict(pcr.fit, x[test, ], ncomp = 5)\nmean((pcr.pred - y.test)^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 142812\n```\n\n\n:::\n\n```{.r .cell-code  code-line-numbers=\"false\"}\npcr.fit <- pcr(y ~ x, scale = TRUE, ncomp = 5)\nsummary(pcr.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nData: \tX dimension: 263 19 \n\tY dimension: 263 1\nFit method: svdpc\nNumber of components considered: 5\nTRAINING: % variance explained\n   1 comps  2 comps  3 comps  4 comps  5 comps\nX    38.31    60.16    70.84    79.03    84.29\ny    40.63    41.58    42.17    43.22    44.90\n```\n\n\n:::\n:::\n\n::: notes\ncoefficients are in scaled unit, not original units.\n:::\n\n<!-- ## PCs with Missing Values -->\n\n<!-- ## Matrix Completion -->\n\n<!-- ## Recommender System -->\n\n\n\n## Other Dimension Reduction (Latent Variable) Methods\n\n- Kernel Principal Component Analysis\n<https://ml-explained.com/blog/kernel-pca-explained>\n\n- Probabilistic PCA\n\n- Factor Analysis\n\n- Autoencoders\n\n- t-SNE (t-distributed stochastic neighbor embedding)\n\n- UMAP (Uniform manifold approximation and projection)\n\n<!-- - PML Ch. 20; ESL Ch. 14 -->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}